{"version":3,"file":"static/js/779.1971d507.chunk.js","mappings":"sSAeaA,EAAmB,WAC9B,OACE,SAAC,IAAD,WACE,SAAC,EAAAC,YAAD,CAAaC,QAAQ,YAAYC,MAAM,UAAUC,KAAK,SAAtD,0BAKL,EAEYC,EAAsB,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACpC,OACE,SAAC,IAAD,CAAQH,MAAM,QAAQD,QAAQ,WAAWI,QAASA,EAASF,KAAK,SAAhE,mBAIH,C,4HC1BKG,EAAWC,EAAAA,GAAAA,GAAH,4DACC,SAAAC,GAAC,OAAIA,EAAEC,MAAMC,UAAU,EAAtB,IACL,SAAAF,GAAC,OAAIA,EAAEC,MAAME,OAAOC,IAAnB,IAGCC,EAAW,SAAC,GAA6C,IAA3CC,EAA0C,EAA1CA,OAAQT,EAAkC,EAAlCA,QAASU,EAAyB,EAAzBA,SAAUC,EAAe,EAAfA,SACpD,OAAwB,IAApBD,EAASE,QAET,SAAC,IAAD,CAAKC,GAAG,KAAKC,GAAI,EAAjB,0CAKa,KAAbH,GAEA,+BACE,SAACV,EAAD,UACGS,GACCA,EAASK,KAAI,SAAAC,GACX,OACE,UAAC,IAAD,CAEEC,GAAID,EAAEC,GACNC,QAAQ,OACRC,WAAW,SACXC,GAAI,EALN,WAOE,UAAC,IAAD,CAAKP,GAAG,KAAKQ,GAAI,EAAjB,UACGL,EAAEM,KADL,KACaN,EAAEO,WAEf,SAAC,EAAAxB,oBAAD,CAAqBC,QAASA,MATzBgB,EAAEC,GAYZ,SAOT,+BACE,SAAChB,EAAD,UACGQ,GACCA,EAAOM,KAAI,SAAAC,GACT,OACE,UAAC,IAAD,CAEEC,GAAID,EAAEC,GACNC,QAAQ,OACRC,WAAW,SACXC,GAAI,EALN,WAOE,UAAC,IAAD,CAAKP,GAAG,KAAKQ,GAAI,EAAjB,UACGL,EAAEM,KADL,KACaN,EAAEO,WAEf,SAAC,EAAAxB,oBAAD,CAAqBC,QAASA,MATzBgB,EAAEC,GAYZ,OAIV,C,qGC/DYO,EAAS,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACvB,OACE,iCACE,SAAC,IAAD,CAAKC,SAAU,EAAf,oCAEA,SAAC,IAAD,CACEC,UAAQ,EACRV,GAAG,oBACHnB,KAAK,OACL8B,aAAa,MACbH,SAAUA,MAWjB,C,8JCnBYI,EAAY3B,EAAAA,GAAAA,KAAH,qEAKT4B,EAAc,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAC5B,OACE,UAACF,EAAD,CAAWZ,GAAG,WAAWc,SAAUA,EAAnC,WACE,SAAC,EAAAC,QAAD,KACA,SAAC,EAAAtC,iBAAD,MAGL,C,sGCTYsC,EAAU,WACrB,OACE,SAAC,IAAD,CACEC,UAAU,OACVC,GAAI,CACF,uBAAwB,CAAEC,EAAG,EAAGC,MAAO,SAEzCC,YAAU,EACVT,aAAa,MACbd,GAAI,EAPN,UASE,UAAC,IAAD,CAAKI,QAAQ,OAAOoB,cAAc,SAAlC,WACE,SAAC,IAAD,CAAKlB,GAAI,EAAT,UACE,SAAC,IAAD,CACEmB,WAAY,CACVC,QAAS,uCAEXb,UAAQ,EACRV,GAAG,oBACHK,KAAK,OACLmB,MAAM,OACN3C,KAAK,OACL8B,aAAa,WAGjB,SAAC,IAAD,CAAKR,GAAI,EAAT,UACE,SAAC,IAAD,CACEmB,WAAY,CACVC,QAAS,UAEXb,UAAQ,EACRV,GAAG,oBACHK,KAAK,SACLmB,MAAM,SACN3C,KAAK,MACL8B,aAAa,cAMxB,C,oKCoDD,UAvFkB,WAChB,IAAMjB,GAAW+B,EAAAA,EAAAA,QAAO,IAClBC,GAAWC,EAAAA,EAAAA,MAETC,GAAUC,EAAAA,EAAAA,IAAYC,EAAAA,IAAtBF,MACApC,GAAWqC,EAAAA,EAAAA,IAAYE,EAAAA,IAAvBvC,OACAwC,GAAUH,EAAAA,EAAAA,IAAYI,EAAAA,IAAtBD,MAEFvC,EAAWmC,GAEjBM,EAAAA,EAAAA,YAAU,WACRR,EAASS,EAAAA,EAAAA,mBACV,GAAE,CAACT,KAEJQ,EAAAA,EAAAA,YAAU,WACRR,GAASU,EAAAA,EAAAA,KACV,GAAE,CAACV,EAAUM,IAEd,IAeMK,EAAkB,WACtBC,SAASC,eAAe,YAAYC,OACrC,EA8BD,OACE,+BACE,UAAC,IAAD,CAAKC,GAAI,EAAG7D,MAAM,UAAlB,WACE,SAAC,IAAD,CAAKgB,GAAG,KAAKC,GAAI,EAAGM,GAAI,EAAxB,wBAGA,SAAC,EAAAU,YAAD,CAAaC,SArDA,SAAA4B,GACjBA,EAAEC,iBAEF,IAAMC,EAAQF,EAAEG,OAAOxC,KAAKuC,MACtBtC,EAASoC,EAAEG,OAAOvC,OAAOsC,MAE3BnD,EAASqD,MAAK,SAAArD,GAAQ,OAAIA,EAASY,OAASuC,CAAtB,IACxBG,MAAM,GAAD,OAAIH,EAAJ,6BAELlB,GAASsB,EAAAA,EAAAA,GAAgB,CAAE3C,KAAMuC,EAAOtC,OAAQA,KAGlD+B,GACD,KAyCK,SAAC,IAAD,CAAKzC,GAAG,KAAKO,GAAI,EAAGN,GAAI,EAAxB,uBAGA,SAAC,EAAAU,OAAD,CAAQC,SAtCS,SAAAkC,GACrB,IAAMO,EAAcP,EAAEG,OAAOD,MAAMM,oBACnCxD,EAASyD,QAAUF,EAEnB,IAAMG,EAAgB3D,EAASD,QAAO,SAAAa,GAAI,OACxCA,EAAKA,KAAK6C,oBAAoBG,SAASJ,EADC,IAI1CvB,GAAS4B,EAAAA,EAAAA,GAAeF,GACzB,KA8BK,SAAC,EAAA7D,SAAD,CACEG,SAAUA,EAASyD,QACnB3D,OAAQA,EACRC,SAAUA,EACVV,QAhCmB,SAAA2D,GACzB,IAAMa,EAAsBb,EAAEc,cAAcC,WAAWC,WAAW1D,GAAG4C,MAI7D5C,EAFSP,EAASqD,MAAK,qBAAG9C,KAAgBuD,CAAnB,IAEvBvD,GAER,GAAIR,EAAQ,CACV,IAAMmE,EAAmBnE,EAAOA,QAC9B,qBAAGQ,KAAgBuD,CAAnB,IAEF7B,GAAS4B,EAAAA,EAAAA,GAAeK,GACzB,CAEDjC,GAASkC,EAAAA,EAAAA,GAAkB5D,GAC5B,QAsBF,C","sources":["components/Button/Button.jsx","components/Contacts/Contacts.jsx","components/Filter/Filter.jsx","components/Form/Form.jsx","components/Input/Input.jsx","components/Phonebook/Phonebook.jsx"],"sourcesContent":["import PropTypes from 'prop-types';\nimport Button from '@mui/material/Button';\nimport { Box } from 'Theme/Box';\nimport { ColorButton } from 'components/AuthNav/ColorButton';\n\n// import styled from 'styled-components';\n\n// const ButtonStyle = styled.button`\n//   margin-top: ${p => p.theme.space[3]}px;\n//   margin-left: ${p => p.theme.space[3]}px;\n\n//   width: ${p => p.theme.space[6]}px;\n//   height: ${p => p.theme.space[4]}px;\n// `;\n\nexport const AddContactButton = () => {\n  return (\n    <Box>\n      <ColorButton variant=\"contained\" color=\"success\" type=\"submit\">\n        Add Contact\n      </ColorButton>\n    </Box>\n  );\n};\n\nexport const DeleteContactButton = ({ onClick }) => {\n  return (\n    <Button color=\"error\" variant=\"outlined\" onClick={onClick} type=\"button\">\n      Delete\n    </Button>\n  );\n};\n\nDeleteContactButton.propTypes = {\n  onClick: PropTypes.func.isRequired,\n};\n","import styled from 'styled-components';\nimport { DeleteContactButton } from 'components/Button/Button';\nimport PropTypes from 'prop-types';\nimport { Box } from 'Theme/Box';\n\nconst UlStyled = styled.ul`\n  font-size: ${p => p.theme.fontSizes[2]}px;\n  color: ${p => p.theme.colors.text};\n`;\n\nexport const Contacts = ({ filter, onClick, contacts, inputRef }) => {\n  if (contacts.length === 0) {\n    return (\n      <Box as=\"h2\" mt={3}>\n        No any contacts in phonebook\n      </Box>\n    );\n  }\n  if (inputRef === '') {\n    return (\n      <>\n        <UlStyled>\n          {contacts &&\n            contacts.map(f => {\n              return (\n                <Box\n                  key={f.id}\n                  id={f.id}\n                  display=\"flex\"\n                  alignItems=\"center\"\n                  mb={3}\n                >\n                  <Box as=\"li\" mr={3}>\n                    {f.name}: {f.number}\n                  </Box>\n                  <DeleteContactButton onClick={onClick} />\n                </Box>\n              );\n            })}\n        </UlStyled>\n      </>\n    );\n  }\n\n  return (\n    <>\n      <UlStyled>\n        {filter &&\n          filter.map(f => {\n            return (\n              <Box\n                key={f.id}\n                id={f.id}\n                display=\"flex\"\n                alignItems=\"center\"\n                mb={3}\n              >\n                <Box as=\"li\" mr={3}>\n                  {f.name}: {f.number}\n                </Box>\n                <DeleteContactButton onClick={onClick} />\n              </Box>\n            );\n          })}\n      </UlStyled>\n    </>\n  );\n};\n\nContacts.propTypes = {\n  onClick: PropTypes.func.isRequired,\n  filter: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.arrayOf(\n      PropTypes.shape({\n        name: PropTypes.string.isRequired,\n        number: PropTypes.string.isRequired,\n      }).isRequired\n    ).isRequired,\n  ]).isRequired,\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    })\n  ),\n};\n","import PropTypes from 'prop-types';\nimport TextField from '@mui/material/TextField';\nimport { Box } from 'Theme/Box';\n\nexport const Filter = ({ onChange }) => {\n  return (\n    <>\n      <Box fontSize={3}>Find contacts by name</Box>\n\n      <TextField\n        required\n        id=\"outlined-required\"\n        type=\"text\"\n        autoComplete=\"off\"\n        onChange={onChange}\n      />\n\n      {/* <input\n        type=\"text\"\n        ng-model=\"search\"\n        id=\"search\"\n        onChange={onChange}\n      ></input> */}\n    </>\n  );\n};\n\nFilter.propTypes = {\n  onChange: PropTypes.func.isRequired,\n};\n","import styled from 'styled-components';\nimport PropTypes from 'prop-types';\nimport { Inputik } from 'components/Input/Input';\n\nimport { AddContactButton } from 'components/Button/Button';\n\nexport const FormStyle = styled.form`\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const ContactForm = ({ onSubmit }) => {\n  return (\n    <FormStyle id=\"formUser\" onSubmit={onSubmit}>\n      <Inputik />\n      <AddContactButton />\n    </FormStyle>\n  );\n};\n\nContactForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n","// import styled from 'styled-components';\nimport { Box } from 'Theme/Box';\nimport TextField from '@mui/material/TextField';\n\n// const InputStyle = styled.input`\n//   width: ${p => p.theme.space[7]}px;\n//   height: ${p => p.theme.space[4]}px;\n// `;\n\nexport const Inputik = () => {\n  return (\n    <Box\n      component=\"form\"\n      sx={{\n        '& .MuiTextField-root': { m: 1, width: '25ch' },\n      }}\n      noValidate\n      autoComplete=\"off\"\n      mt={3}\n    >\n      <Box display=\"flex\" flexDirection=\"column\">\n        <Box mb={3}>\n          <TextField\n            inputProps={{\n              pattern: '[a-zA-Zа-яА-Я]*',\n            }}\n            required\n            id=\"outlined-required\"\n            name=\"name\"\n            label=\"Name\"\n            type=\"text\"\n            autoComplete=\"off\"\n          />\n        </Box>\n        <Box mb={3}>\n          <TextField\n            inputProps={{\n              pattern: '[0-9]*',\n            }}\n            required\n            id=\"outlined-required\"\n            name=\"number\"\n            label=\"Number\"\n            type=\"tel\"\n            autoComplete=\"off\"\n          />\n        </Box>\n      </Box>\n    </Box>\n  );\n};\n\n//   return (\n//     <>\n//       <InputStyle\n//         type=\"text\"\n//         name=\"name\"\n//         pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я\n// ])?[a-zA-Zа-яА-Я]*)*$\"\n//         title=\"Name may contain only letters,\n// apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles\n// de Batz de Castelmore d'Artagnan\"\n//         required\n//       />\n//       <Box as=\"h2\" mt={3} mb={3}>\n//         Number\n//       </Box>\n//       <InputStyle\n//         type=\"tel\"\n//         name=\"number\"\n//         pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n//         title=\"Phone\n//         number must be digits and can contain spaces, dashes, parentheses and\n//         can start with +\"\n//         required\n//       />\n//     </>\n//   );\n","import { useEffect, useRef } from 'react';\n// import { nanoid } from 'nanoid';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { ContactForm } from 'components/Form/Form';\nimport { Box } from 'Theme/Box';\nimport { Filter } from 'components/Filter/Filter';\nimport { Contacts } from 'components/Contacts/Contacts';\nimport { getContacts, getFilter } from 'redux/selectors';\nimport { contactsFilter } from 'redux/getContactsSlice';\nimport { getApiContacts } from 'redux/service/getContacts.service';\nimport { postApiContacts } from 'redux/service/postContacts.service';\nimport { deleteApiContacts } from 'redux/service/deleteContacts.service';\nimport { userData } from 'redux/selectors';\nimport operations from 'redux/auth/auth-operations';\n\nconst Phonebook = () => {\n  const inputRef = useRef('');\n  const dispatch = useDispatch();\n\n  const { items } = useSelector(getContacts);\n  const { filter } = useSelector(getFilter);\n  const { token } = useSelector(userData);\n\n  const contacts = items;\n\n  useEffect(() => {\n    dispatch(operations.fetchCurrentUser());\n  }, [dispatch]);\n\n  useEffect(() => {\n    dispatch(getApiContacts());\n  }, [dispatch, token]);\n\n  const addNewName = e => {\n    e.preventDefault();\n\n    const value = e.target.name.value;\n    const number = e.target.number.value;\n\n    if (contacts.find(contacts => contacts.name === value)) {\n      alert(`${value} is already in contacts.`);\n    } else {\n      dispatch(postApiContacts({ name: value, number: number }));\n    }\n\n    clearInputField();\n  };\n\n  const clearInputField = () => {\n    document.getElementById('formUser').reset();\n  };\n\n  const searchByFilter = e => {\n    const searchValue = e.target.value.toLocaleLowerCase();\n    inputRef.current = searchValue;\n\n    const filteredValue = contacts.filter(name =>\n      name.name.toLocaleLowerCase().includes(searchValue)\n    );\n\n    dispatch(contactsFilter(filteredValue));\n  };\n\n  const removeNameFromList = e => {\n    const removeableContactId = e.currentTarget.parentNode.attributes.id.value;\n\n    const findedId = contacts.find(({ id }) => id === removeableContactId);\n\n    const { id } = findedId;\n\n    if (filter) {\n      const filteredContacts = filter.filter(\n        ({ id }) => id !== removeableContactId\n      );\n      dispatch(contactsFilter(filteredContacts));\n    }\n\n    dispatch(deleteApiContacts(id));\n  };\n\n  return (\n    <>\n      <Box ml={5} color=\"primary\">\n        <Box as=\"h2\" mt={3} mb={3}>\n          Phonebook\n        </Box>\n        <ContactForm onSubmit={addNewName} />\n        <Box as=\"h2\" mb={3} mt={3}>\n          Contacts\n        </Box>\n        <Filter onChange={searchByFilter} />\n        <Contacts\n          inputRef={inputRef.current}\n          filter={filter}\n          contacts={contacts}\n          onClick={removeNameFromList}\n        />\n      </Box>\n    </>\n  );\n};\n\nexport default Phonebook;\n"],"names":["AddContactButton","ColorButton","variant","color","type","DeleteContactButton","onClick","UlStyled","styled","p","theme","fontSizes","colors","text","Contacts","filter","contacts","inputRef","length","as","mt","map","f","id","display","alignItems","mb","mr","name","number","Filter","onChange","fontSize","required","autoComplete","FormStyle","ContactForm","onSubmit","Inputik","component","sx","m","width","noValidate","flexDirection","inputProps","pattern","label","useRef","dispatch","useDispatch","items","useSelector","getContacts","getFilter","token","userData","useEffect","operations","getApiContacts","clearInputField","document","getElementById","reset","ml","e","preventDefault","value","target","find","alert","postApiContacts","searchValue","toLocaleLowerCase","current","filteredValue","includes","contactsFilter","removeableContactId","currentTarget","parentNode","attributes","filteredContacts","deleteApiContacts"],"sourceRoot":""}