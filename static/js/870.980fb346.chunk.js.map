{"version":3,"file":"static/js/870.980fb346.chunk.js","mappings":"iOAoFA,UA5Ec,WACZ,OAA0BA,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAAgCF,EAAAA,EAAAA,UAAS,IAAzC,eAAOG,EAAP,KAAiBC,EAAjB,KAEMC,GAAWC,EAAAA,EAAAA,MAEXC,EAAe,SAAC,GAAiC,IAAD,IAA9BC,OAAUC,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,MACtC,OAAQD,GACN,IAAK,QACH,OAAOP,EAASQ,GAClB,IAAK,WACH,OAAON,EAAYM,GACrB,QACE,OAEL,EAWD,OACE,SAAC,IAAD,CACEC,UAAU,OACVC,GAAI,CACF,uBAAwB,CAAEC,EAAG,EAAGC,MAAO,SAEzCC,YAAU,EACVC,aAAa,MACbC,GAAI,EAPN,UASE,UAAC,IAAD,CACEC,GAAG,OACHC,QAAQ,OACRC,cAAc,SACdC,SAvBe,SAAAC,GACnBA,EAAEC,iBAEFlB,EAASmB,EAAAA,EAAAA,MAAiB,CAAEvB,MAAAA,EAAOE,SAAAA,KAEnCD,EAAS,IACTE,EAAY,GACb,EAYG,WAME,SAAC,IAAD,CAAKqB,GAAI,EAAT,UACE,SAAC,IAAD,CACEC,UAAQ,EACRC,GAAG,QACHlB,KAAK,QACLmB,MAAM,QACNlB,MAAOT,EACP4B,KAAK,OACLb,aAAa,MACbc,SAAUvB,OAId,SAAC,IAAD,CAAKkB,GAAI,EAAT,UACE,SAAC,IAAD,CACEE,GAAG,WACHlB,KAAK,WACLmB,MAAM,WACNlB,MAAOP,EACP0B,KAAK,WACLb,aAAa,MACbc,SAAUvB,OAGd,SAAC,IAAD,WACE,SAAC,IAAD,CAAQwB,QAAQ,YAAYF,KAAK,SAAjC,0BAOT,C","sources":["components/LogIn/LogIn.jsx"],"sourcesContent":["import { Box } from 'Theme/Box';\n\nimport { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport operations from 'redux/auth/auth-operations';\nimport TextField from '@mui/material/TextField';\nimport Button from '@mui/material/Button';\n\nconst LogIn = () => {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  const dispatch = useDispatch();\n\n  const handleChange = ({ target: { name, value } }) => {\n    switch (name) {\n      case 'email':\n        return setEmail(value);\n      case 'password':\n        return setPassword(value);\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    dispatch(operations.logIn({ email, password }));\n\n    setEmail('');\n    setPassword('');\n  };\n\n  return (\n    <Box\n      component=\"form\"\n      sx={{\n        '& .MuiTextField-root': { m: 1, width: '25ch' },\n      }}\n      noValidate\n      autoComplete=\"off\"\n      mt={3}\n    >\n      <Box\n        as=\"form\"\n        display=\"flex\"\n        flexDirection=\"column\"\n        onSubmit={handleSubmit}\n      >\n        <Box mb={3}>\n          <TextField\n            required\n            id=\"email\"\n            name=\"email\"\n            label=\"Email\"\n            value={email}\n            type=\"text\"\n            autoComplete=\"off\"\n            onChange={handleChange}\n          />\n        </Box>\n\n        <Box mb={3}>\n          <TextField\n            id=\"password\"\n            name=\"password\"\n            label=\"Password\"\n            value={password}\n            type=\"password\"\n            autoComplete=\"off\"\n            onChange={handleChange}\n          />\n        </Box>\n        <Box>\n          <Button variant=\"contained\" type=\"submit\">\n            Log In\n          </Button>\n        </Box>\n      </Box>\n    </Box>\n  );\n};\n\nexport default LogIn;\n\n// <Box\n//   as=\"form\"\n//   display=\"flex\"\n//   flexDirection=\"column\"\n//   width=\"200 px\"\n//   autoComplete=\"off\"\n//   onSubmit={handleSubmit}\n//   ml={3}\n//   mt={3}\n// >\n//   <label htmlFor=\"email\">Email</label>\n//   <StyledInput\n//     type=\"email\"\n//     value={email}\n//     name=\"email\"\n//     id=\"email\"\n//     onChange={handleChange}\n//     autoComplete=\"off\"\n//     pattern=\"[^@]+@[^@]+\\.[a-zA-Z]{2,}\"\n//     title=\"Invalid email address\"\n//     required\n//   />\n\n//   <label htmlFor=\"password\">Password</label>\n//   <StyledInput\n//     type=\"password\"\n//     value={password}\n//     name=\"password\"\n//     id=\"password\"\n//     onChange={handleChange}\n//     autoComplete=\"off\"\n//     pattern=\"^(?=.*[A-Za-z])(?=.*\\d)[A-Za-z\\d]{8,}$\"\n//     title=\"Password must contain: Minimum 8 characters atleast 1 Alphabet and 1 Number\"\n//     required\n//   />\n//   <StyledButton type=\"submit\">Register</StyledButton>\n// </Box>\n"],"names":["useState","email","setEmail","password","setPassword","dispatch","useDispatch","handleChange","target","name","value","component","sx","m","width","noValidate","autoComplete","mt","as","display","flexDirection","onSubmit","e","preventDefault","operations","mb","required","id","label","type","onChange","variant"],"sourceRoot":""}